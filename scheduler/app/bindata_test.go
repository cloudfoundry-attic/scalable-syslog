// Code generated by go-bindata.
// sources:
// certs/adapter-rlp.crt
// certs/adapter-rlp.csr
// certs/adapter-rlp.key
// certs/adapter.crt
// certs/adapter.csr
// certs/adapter.key
// certs/scalable-syslog-ca.crl
// certs/scalable-syslog-ca.crt
// certs/scalable-syslog-ca.key
// certs/scheduler-api.crt
// certs/scheduler-api.csr
// certs/scheduler-api.key
// certs/scheduler.crt
// certs/scheduler.csr
// certs/scheduler.key
// DO NOT EDIT!

package app_test

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _adapterRlpCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKjCCAhKgAwIBAgIRAKyPeNvMwUJJb2rygwrEm1gwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xOTAzMjUyMTQ1MjNaFw00NDAz
MjUyMTQ1MTdaMBYxFDASBgNVBAMTC2FkYXB0ZXItcmxwMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAk9/DjY/aD5EL7x6hX2ttN6Ok7XAfkJwgDhDnSiBt
cN9pb5JP5hY09kzMferiwCAgUcQWln9Al8VheBesK/Vz2nigVSuisxo3q0bYtc/B
vuElresgz93vE0kXYidY/4I4jq8EJ64qNOhgnfOLU3bGLQfQLTwCdIDn59MXXBK1
4OLW+5rbGfdniIL/NFBfnem02vAC7YeBjU0TP8bqw7+gnaV1FqKjz+qphGlsO89a
KtldQ0IU7tbKg34Zj6LPmE9gYpsQrQs5MQylIeye7uHXSlR0mTEIby/z4FsDrD7s
3+AuaKFUE2I6WA14+ic9zcDXAqBwZyT9RuLDPO5VKoC2uwIDAQABo3EwbzAOBgNV
HQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1Ud
DgQWBBQk/AbW5sRPfljD6hHJm8dwcETPVjAfBgNVHSMEGDAWgBQk7aYtdQcSqiaD
Gi4sdYLbED3N9zANBgkqhkiG9w0BAQsFAAOCAgEAvl3B8R6C9ZuEEE4gTN9O3pdD
ZLKSj6/H0shhvq0T3mJGIWufxyTXt2Bz7Pz2Z4OIHBeVxf/BammneQ9TMUoYChl8
rocpXprERbzGwJdUK5VUk+yW9OmamRU3w2oG1fAPfWepBmM1NJ+tvtAkyo661dgn
ii/MGzrBxsRJBO0Z80WMWZ+7muUT5qZE94fc5s9icQBik/wyZ0RgGzh3R6XG3+LI
eT/RXVYZMI2s3WLiKT1AlWDwJSBa2S2sEt4EK506sY4FSR4NYfZuUMt5rKmVBI9I
6j2OobqnuNTakS07Gfawq8+yU7ktNZ08JYo21Y73lTHQJgnhc58Jv+JEL7G26/+w
ibFbRmhGWJ+oOUgmWCEUjtWdoYAd6EaulLy+PM5bLmlesEoTBO5SYcIPTOQWLM/C
MLBeujhhgIlCBHuAz56deNiNlNV61uV0j+HGUBBK/N4FMs6r054rY1xbaj03qEaW
nzHb0OZSTrYJXdQSBcMkL9cgf81eRTV//EzR3HbjBV44rR7q6zkSjxXa3MqH0esq
XuzwGBbVW8lKJneizdOxfnobP0b/OzsDzhStk4g2/Nw6ctx3spAkfeYeewjJ2s6S
XrZ4AVOzaGF599ulRifAbypBfhxgUDDHQxK3IeL/RBAaMjNacbOAE0PvL82TxJRS
2KvaqoXcXh6ntWDXojs=
-----END CERTIFICATE-----
`)

func adapterRlpCrtBytes() ([]byte, error) {
	return _adapterRlpCrt, nil
}

func adapterRlpCrt() (*asset, error) {
	bytes, err := adapterRlpCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterRlpCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWzCCAUMCAQAwFjEUMBIGA1UEAxMLYWRhcHRlci1ybHAwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCT38ONj9oPkQvvHqFfa203o6TtcB+QnCAOEOdK
IG1w32lvkk/mFjT2TMx96uLAICBRxBaWf0CXxWF4F6wr9XPaeKBVK6KzGjerRti1
z8G+4SWt6yDP3e8TSRdiJ1j/gjiOrwQnrio06GCd84tTdsYtB9AtPAJ0gOfn0xdc
ErXg4tb7mtsZ92eIgv80UF+d6bTa8ALth4GNTRM/xurDv6CdpXUWoqPP6qmEaWw7
z1oq2V1DQhTu1sqDfhmPos+YT2BimxCtCzkxDKUh7J7u4ddKVHSZMQhvL/PgWwOs
Puzf4C5ooVQTYjpYDXj6Jz3NwNcCoHBnJP1G4sM87lUqgLa7AgMBAAGgADANBgkq
hkiG9w0BAQsFAAOCAQEAKUhQOJ+gnHGlSAOjvX+V2WvSx1OR2ztNjxhX0A/O/pb3
ZAd2lStBurSSSZRzZogmjCMkEbyXVGDgjChltQLZxJRxhSGGlKaubE3ML0LZqjW4
f+guYlonkcDlJwe94GDxU6Swx2yBLC0VPlZlhSo6HIJpge7+MXt7QWSLfCkBAeP7
fbi9iULHxN0r2grs8PRtruvHGiAJalJ8Sn4OL15czwU7o7NaAmwhjPoY/1FKoqpH
X81MLG0gqumNvsP3F9ZarukDL0m/8zsxUhLvHvYUsu1pRTmy+x1kQxFvhnRcLP10
EwXYhHEl1sn3Z9fCnAkr1N+MrJJ5B3EACFRook7EEA==
-----END CERTIFICATE REQUEST-----
`)

func adapterRlpCsrBytes() ([]byte, error) {
	return _adapterRlpCsr, nil
}

func adapterRlpCsr() (*asset, error) {
	bytes, err := adapterRlpCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterRlpKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAk9/DjY/aD5EL7x6hX2ttN6Ok7XAfkJwgDhDnSiBtcN9pb5JP
5hY09kzMferiwCAgUcQWln9Al8VheBesK/Vz2nigVSuisxo3q0bYtc/BvuElresg
z93vE0kXYidY/4I4jq8EJ64qNOhgnfOLU3bGLQfQLTwCdIDn59MXXBK14OLW+5rb
GfdniIL/NFBfnem02vAC7YeBjU0TP8bqw7+gnaV1FqKjz+qphGlsO89aKtldQ0IU
7tbKg34Zj6LPmE9gYpsQrQs5MQylIeye7uHXSlR0mTEIby/z4FsDrD7s3+AuaKFU
E2I6WA14+ic9zcDXAqBwZyT9RuLDPO5VKoC2uwIDAQABAoIBAAXQia76VhfAm1iG
us+2uK+0ZprTitoz2WrULVQT3FnQ3yN8/FlOzDxXHr9gyhPF759nd3/pdw/Auilv
vNxppWmUzrEqqxYh1MiOW50ikzq/Pa0ODtc9odX/TMUWSQCbDUBHD4HD7nLwJERx
vCvHAtnocb4lmu8b1oKeIVAEiFRUZ9Ro2/dB8kkMifirQMhDORTsFeMNlhWUGRMB
bvQmg1R1+U5x24INq87u27zUDXvZxxkxGMozNgAVM3FgGIagXPQc16wM3cj4DuHj
9J9x2Eac40oczT629MdQEuvqs3w5h+Co8eaTLlpQMrRYZs0Q2mCFXRV/YPn7YCpN
r+gNJZkCgYEAxDMs4MeKW3bQtrpTuEYFrHNKkt/X3KcBBglINo+x8aZFDhV5wkkN
3IJiggJn6Ajo7Wvt4LtmtrOHgNX67F4WgHHKh5BystjYquwDgpmV5s8Ei/DG/Kmy
Mb65UBP/PbGX9nVbBJK8pbW44AU472sp5jxajdGKDfPhdjIQ6O/LipUCgYEAwPHi
qldm1Yggpe9iiDLWF0qfTC2HABPgTUbvXCE7VRDgeaOQmNGMcr80PzD7IkXGa8Vt
owkE9/fHW5LcDRPJ2qDdq3596v4d8EgbIJCn22BGey9PMEcC00pgNoaz+MyhBMVl
pXrHEMKpImPIvbL9g9xAwjaXA3RZM9eFSXx3OA8CgYBdBWZhrDmM4+hQuka3N3u5
J3BT8o0FsKhrlDsIo1hamdpjswrncnt/8NGDkmBxQsgsyN8fjbpFJRk5nDo7luBU
RZ8gZvv6j5UqdHu1j9vicoRVVPMDF/HEZAi4TsLVHT5PO5TLtkZ6yo28qL01xjk3
T6YfVxl9RAPBZjteNVLrgQKBgQC5GhVjaBA+wKbZqmuz0Fl15OAoO/Es0OS6HlhZ
4YPDWzqPV6zL/xSnrOmZygrT2W6/S5uf8nIy1iIKpzy2ywo21Wd0NBjnDb15HCPy
PPTcUGOtoDhvT2DVhaACD36vLNk484tNkxlQ6f9K/8HAw+vUycPSzn5YERHW22eC
lYbmXwKBgQCDZvl3Bw4/cj7ba3X3aL+ncw4AeFxNGDmM+P1mc+q4BBPiSYGdQnNP
X3qpz8gf9I9YFoIJDB/ICq1MiF5+Y8ftjkYyhYt2jDc3j7Vf+Y/mNxJn16RIrdHc
WBmcF0fdv2INVlRpLCXqg0YhwjJVy0SJznKVgBZ0hojB9I2Yij8yTg==
-----END RSA PRIVATE KEY-----
`)

func adapterRlpKeyBytes() ([]byte, error) {
	return _adapterRlpKey, nil
}

func adapterRlpKey() (*asset, error) {
	bytes, err := adapterRlpKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKTCCAhGgAwIBAgIRAN/XueKlyiXvuTT/ct1tFEcwDQYJKoZIhvcNAQELBQAw
GzEZMBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTAeFw0xOTAzMjUyMTQ1MjNaFw00
NDAzMjUyMTQ1MTdaMBIxEDAOBgNVBAMTB2FkYXB0ZXIwggEiMA0GCSqGSIb3DQEB
AQUAA4IBDwAwggEKAoIBAQC8kxQ3yNhMKwpsJ7rHTAAeCZ+utHQaVh4RwhrcVrwH
RBxG7JWGIKr8US3aDwagbOwl2kMStHVolGu13sepas1rtAiZ6o/JR2Vh5O9FuCQz
pmCwcfvUafLUrLJaWLxSdrQHaOEG6C5/8nOjGRBhIUwS8T4yCHApudumf+xLNNyJ
GsTBcTu5PkMZMMRJVYFWYI2TkT1zS3pJ8sp632z4BMaVXjDJvv/L2yG2nf7iqVBl
FgQTo7az8u2x+a9n8EuU0wN8syO6vbmCoTjD0O+0LgNXWUQBYHtvg1kqMbU1rceT
NYN4A0jRq6ApbzIadpCjndPerwJl5Sf4DERKexSo2LrrAgMBAAGjcTBvMA4GA1Ud
DwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHQYDVR0O
BBYEFMfd33MeLtriFPF0POPtApLvL5mOMB8GA1UdIwQYMBaAFFADLLaVMSXaPM1v
S0L5Q22rUpy8MA0GCSqGSIb3DQEBCwUAA4ICAQC9hV7X8g5tZcVQdOLVNxPns+Vc
3PezqJ8CbKQO4MSxLsdNZxNMMQTCUBnReEYgMLlQsTV5dgnjj4QcOKEPPl1biJth
k2BOawTJ0LBT/I7I4aDVbzJnGC2Rftd/I+zLrkiSOsIXq8ey/V7L12UtVLV5sENv
Yl5mTV2jWk/KRrqXhW9jdk4EGeU/zcTyxMCD7ekGL87tiiNYh/gKYWFgwjUFCycH
ZEPi1zvL9pwWYMsXV6bAZ9jXdz5oPl5l9xYEBrvLY/aFeFE/yjAzXKjdQ139miWt
Z1nRR1C9KxjrItK10eLA1brGbmfLO26Izoj4CG3Mwb4X8r4Tck8xaZfqhUvRF7fZ
oSIs4Q+n+UL41WcU5EZ08Lhf9E/a0Ph9SeIYvIrGo53ZEubmw99KHtF8YQ0YhrNU
1phGKtH8mwHMkX8zi1x7bkgn+S06PEWqsRMd1jpWhKT9pJ1oE/uGyuSDSkvXMj3X
IccuLPdIUNJu7MPIxyl+8YpwdWmSTnTdQIqww0PDsGTWqNsG7qa3duzs4cxl1ZVE
0c4P/13Fc9kt1MjUUHIsMfptU5ExAUjherbHMGajq5W3YxvAqLnkz1Hs5yuGxCQp
o6s99rmlE2vXtJRgFjMJNbtK77RyGJLjJgzMczNZ+cmGwlt7Va2h/FBaIfw170GU
lneXhxtLGtWtLP21Sw==
-----END CERTIFICATE-----
`)

func adapterCrtBytes() ([]byte, error) {
	return _adapterCrt, nil
}

func adapterCrt() (*asset, error) {
	bytes, err := adapterCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.crt", size: 1501, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHYWRhcHRlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALyTFDfI2EwrCmwnusdMAB4Jn660dBpWHhHCGtxWvAdE
HEbslYYgqvxRLdoPBqBs7CXaQxK0dWiUa7Xex6lqzWu0CJnqj8lHZWHk70W4JDOm
YLBx+9Rp8tSsslpYvFJ2tAdo4QboLn/yc6MZEGEhTBLxPjIIcCm526Z/7Es03Ika
xMFxO7k+QxkwxElVgVZgjZORPXNLeknyynrfbPgExpVeMMm+/8vbIbad/uKpUGUW
BBOjtrPy7bH5r2fwS5TTA3yzI7q9uYKhOMPQ77QuA1dZRAFge2+DWSoxtTWtx5M1
g3gDSNGroClvMhp2kKOd096vAmXlJ/gMREp7FKjYuusCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQA5Et9hyGNMG34elfalxTZTx+qG3lLUwITIXA3Y0xHFf5CM/Zg4
dyFuUWGNqMjTeVXJJoRdKSZG3NvTZZpHfl3MmvIIGMoRtDRmj3U07AdbSz6Ig7Cc
qBADNz8rmfM5s/ebU2Mu0yYhQz2MTNB+iWT7F3JBtQmZRWac5O+wwny9xJK0EMEi
3jEXBMhh72BKG3HX6ZjIvyc1ciU3rOm4tRNQPs0NxR77zrhB+3uBJPxPMfFv0AHU
DrkAkf3drojpO3oCx74yg8TzEOh2towpTBakFd0srflHoA4pqn4FE+6T5aiUH9H2
k5zIXjUkNkjiR7s7xglaS//+TiHBDNX1OvzD
-----END CERTIFICATE REQUEST-----
`)

func adapterCsrBytes() ([]byte, error) {
	return _adapterCsr, nil
}

func adapterCsr() (*asset, error) {
	bytes, err := adapterCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEAvJMUN8jYTCsKbCe6x0wAHgmfrrR0GlYeEcIa3Fa8B0QcRuyV
hiCq/FEt2g8GoGzsJdpDErR1aJRrtd7HqWrNa7QImeqPyUdlYeTvRbgkM6ZgsHH7
1Gny1KyyWli8Una0B2jhBuguf/JzoxkQYSFMEvE+MghwKbnbpn/sSzTciRrEwXE7
uT5DGTDESVWBVmCNk5E9c0t6SfLKet9s+ATGlV4wyb7/y9shtp3+4qlQZRYEE6O2
s/LtsfmvZ/BLlNMDfLMjur25gqE4w9DvtC4DV1lEAWB7b4NZKjG1Na3HkzWDeANI
0augKW8yGnaQo53T3q8CZeUn+AxESnsUqNi66wIDAQABAoIBAQC5VmUcns3XrsXD
nxi4ID5NR3AmKT2jVNig44G65ZRQH+Ua4BPli94Bt1e1ZedBbUx7t5UMoUhzzMxA
KAFcxZe4L230uNExJnbCTFvOzjjmerO1N5InJyp/VGzG10fgVMKENdRVEYYCQqzc
tBmhHTTDuU9DpX93wy/a6Qe4su+931wtMULgpL7iYduZ4QGMwe8fIv474kuYuodx
C3FOaK40relv0eCnImcRAvzJstRVSuAnCSBlwpi6BAel/c7tUPGntGq8CwU6M+MZ
15yU+o9jF53ZqN66ScIuxSfiqj4LaFXDDZyHR982f5rGi6iEr5V5UHYJk3cIubs/
OEpBMPDBAoGBAO1Mzrukzex3bIE7FebDiOOxWBBKbG2bnDkZvnh+IWXCXDiflRM0
slFBzTz+uAX5iYrc01w4vhxvAMhjnbVrwDKSwVlXVpugKF9//i1u2e2iBC7E+3n+
A3Z5A0j+1NIhU7LCkKnNq9nX1Yjptekgxh/PmEzsUqnsqaCD+fcDadozAoGBAMtv
Tad7iWEMX5cPV81kM2TBpADTVvvJIhbLVFvRx0jcbz3SRLGnYPjSoqGRVv7wAtuM
p/nDq/4G6G0CnaLBPxRJGYJWmSRBN7oI+aqtJMGKIGDjRwFV3hPIMBjpRjyIWheh
c3MSKY9Jm8EbnWm3LWIWSFwfOElf8SFtPaf7VNRpAoGBAICFtAZPOTSUbdEEVlVY
nABuIbsZA+bNe+w1NEMAVUhO3zHPxKbVSKrXz7f0YWjjAQqTlWoCVX0C5dKimV0U
EdGSSGQB+KdrM9KdeOXUfvXEZS2LhIRK/kchPZVAZ7WzVSihVkaRXT0sN7vikKLG
HGhIQD2RVSgxRKHqOOz/DUqfAoGBAJI1C01sht6d4vGRUFxIQHuQhAsn2OMaugpB
1f4rtZtS+gwnW8GGdzY9RC70Yt7UpmkeHPdvvuPSGSeHcr2vP2OX6eJ31JZu3Nsy
aiVVTQ5f9EdN8REvomz7Oj4dIaKNqJpFKdEw43ecwnk2HJsG0HIna5fxxCVP8+A/
P8nD40LJAoGAP2ebVA0Tx8rcvIUixNZoPXss7NAGkmQClG/u3CWxt2iqKli4Rfp3
XK+b99Q/nLFM3eBOqOWa300hLidA4uGCGshg0ezluClHeWvNT5YRC7iJELsxPUAd
wAEJLq0tUjIlcipFg+vtqdKkpL0PNGm1UD4VMuEKnYRSLaXSXQTyOVc=
-----END RSA PRIVATE KEY-----
`)

func adapterKeyBytes() ([]byte, error) {
	return _adapterKey, nil
}

func adapterKey() (*asset, error) {
	bytes, err := adapterKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaCrl = []byte(`-----BEGIN X509 CRL-----
MIICijB0AgEBMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNVBAMTEHNjYWxhYmxlU3lz
bG9nQ0EXDTE5MDMyNTIxNDUyMloXDTQ0MDMyNTIxNDUxOFowAKAjMCEwHwYDVR0j
BBgwFoAUUAMstpUxJdo8zW9LQvlDbatSnLwwDQYJKoZIhvcNAQELBQADggIBAEM3
tOravTa2Wy6gUJ2JO87E+fBomy1JorZB7UWlO7ii7GrIELddHz9U+K0epNjnDE6q
kxh83hANEkYwPpn+hj9/x+cKeecH3vAxy63C3Nm4ckZCAIdE38/ca/2hW3Uej8cl
trgkEGNeu4I8vUip2kFEd+4j09Q1jxvoBGuqDixAGPY3O0Ldwy+kKldyeH1PHiFi
l2WXjQblE7uVvde+xUa5jteS1eOqZIy+h+STbMMiZWvrlnp/NtCJk4pwBix/BeLc
2N6CJXV3qBjTA57j1rULU+VIOH/An9JRG9mCB0o4hswaWcOV9etyncuuIP2Ws97n
Kxs8Pnjvib2iy3GncVvYVV50GrOig8Wxdaac4a+CG9UGvZRXm4FfOfXhzjWIuuKh
ZXqQcnJcBux6bjfjtRnC00LXgI0/yEmQGn3uvRh5JcJZOdTo5pS9NnckK/6DKm6x
k/f1DEpqquwqkqPzuexLalimA1wSyff6wMgOD5G/uKXRdMICWlAC76dC0oOTP2KP
LEEO1jwVgy9DBog8ej2LgsrlRkb3n8bnLCwJMqOfFfY6PvouBMU1B+5+SD8FJCCC
jdXyiPHDKC+0fLBapB/U9E6PLlphx/CCNjhtKLEk/IZsOvD/KuTFR+LXPdFfg4EN
0I3KMe1bmvymNsXBJOFQjFE66nUi6JAFaP8xt/nj
-----END X509 CRL-----
`)

func scalableSyslogCaCrlBytes() ([]byte, error) {
	return _scalableSyslogCaCrl, nil
}

func scalableSyslogCaCrl() (*asset, error) {
	bytes, err := scalableSyslogCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.crl", size: 934, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE9jCCAt6gAwIBAgIBATANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDExBzY2Fs
YWJsZVN5c2xvZ0NBMB4XDTE5MDMyNTIxNDUxOFoXDTQ0MDMyNTIxNDUxOFowGzEZ
MBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIP
ADCCAgoCggIBAMZhRmK5r0RMQ1jHiZ6t8eqgR4FqkfX2vrdKFeeVTArqHWRKSCeR
V9iWqXqrmqQBVmuvHmj6r5DdYJy8nj1lmjY05o0UJUpRXPd/hXiidLPQ6FVZT+BA
KbI3dPrbcLVm8nygo6DkspCRjoaXGrLPQWLv4svw261usKQUIz+2h3KU3D3cbzba
b7luvwAEpZE9vshsAbgkuzzbnaHBPdmHC3QEVJEWcMJOK4ci2hZoF6M1cwYRQQje
XskI4h2jJLikuIOMyrbxaUfBkOLJAXXeTutRGV8SiXPeW+2u9Ji5oiMWrLMwUmzD
/Hv+weL6zwM0pAfae4RoPcZGOYkWGkCQb5mNTsl2sx0EUe40N5p6T8CZeO7a8SPA
1NhZBCSao/R6J+ZiB5nCNv0nPa/paM495QeQPsAF3PF7VN7dXNWiP0N9gKdShRg6
KOb6haXlYlOQEU7VTgmIqZtSA86gV+JGTgM7jYQ+0N1154ugWNXlRfMWQXgu8I97
O0LDNzmAJzZpnR88VRMwNDL7ksHqXgkYaOY4jj2sFUaDxN+yrGtDD17gGKzpLv+c
giVRKVOdjrZNCrL5d2EG4pXQnVnj8H4xY4FD4kD2SuAhR2QQzSZXn+nfIJtq4Y16
uw/2HLEqUzyEHpU0DpWXP3pS2x41290t3fUGUypfcOUUnIxMbnaKZOHXAgMBAAGj
RTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW
BBRQAyy2lTEl2jzNb0tC+UNtq1KcvDANBgkqhkiG9w0BAQsFAAOCAgEAKg1b41vw
sLc7HA8IT7ipSzN9aEr3UU5S/ISXauHBv9iBNDGlXzUlr2w9CDD85ODib1w8rWpu
7N6MXNp6p+ANGrgwID5dmJwJ+kWuj7twydpvz/aNgSimwGBhM1KVWH19VH8iEkbR
Voagd1A1cd5Afgz/Vsv7Yj0HEyqyd+/3vIMo/TZ2d7de2g/wfntMD53nlXyYQl9D
0gxVzzdeSE+wX/at27putvzU6E+5y2jLZl3ESSyOQFIg4VOhjKFg4NCstx4d21Jn
PxeFuyVwvrEJTDiNUIMFQtXwhxLq1WAnvQZd+eNU2wOR+LCNRfD9Okgf5ed/bU0S
lpcUOLTLUNnxU5mH6E3ENhm5f5aYTxRRUWNICumxuqnwa+C4+t3XbvApeJ0ok8z5
fVRIeitqGnFAPPI7lFwLMD9bd0/CDUoBAfif6Gc1JL1aUOLOi+AvSUpdCM8Ce5ht
BldPK383F6m7KHbEzOhcQuGmU2cyMIKeVtK+wlNRMHFF4GUfBvlsXNBsyYNxFQRY
uR00XrIM5HEyPj7H2yRTbO3CxJH54IjXBFxtdhohV31iGtEYr29pBsNRZ/HGpL+j
x9idaA5N/PAEyyV1yGbIuceZKeYRIv/1DAeL1zAemcBOL+QurEm2UmyFqQuEb6Dn
YkP+u76GYDMnKQEWRdJcBEo9AcfBlLbPDqI=
-----END CERTIFICATE-----
`)

func scalableSyslogCaCrtBytes() ([]byte, error) {
	return _scalableSyslogCaCrt, nil
}

func scalableSyslogCaCrt() (*asset, error) {
	bytes, err := scalableSyslogCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.crt", size: 1781, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func scalableSyslogCaKeyBytes() ([]byte, error) {
	return _scalableSyslogCaKey, nil
}

func scalableSyslogCaKey() (*asset, error) {
	bytes, err := scalableSyslogCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerApiCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIRAN0UoKNLipzPJUMIS1WG65QwDQYJKoZIhvcNAQELBQAw
GzEZMBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTAeFw0xOTAzMjUyMTQ1MjNaFw00
NDAzMjUyMTQ1MThaMBgxFjAUBgNVBAMTDXNjaGVkdWxlci1hcGkwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDrX5RZ/4WG5V8RTmhiEf/1EPQ8qBjPJKRy
KeErrEPiFzH+YV0OQhPjZwCLyV/vguyz9HkUb62bL1XyMXC4S1RRjpORRV8Edpc7
KAm41QuCbjzBN2M+CvCCSgpURfYtbh7ALFt3xhfrDa2lw2DUDnrwGJoWrCnw0mgT
BIOVuYaLeUZjq7J4PNywy3eTtWriA+Eohflgp+JyANIMYdke0a76TxZXnozxB7uR
M4LOAkjoUq5vXZiDXu2r7dHvJg+9SM4/pdFr5/evDVZb2xxklPY9hxuVgjr3u7a1
0ip3VA5t3eoxI/xMELo88rd4N9Lv3F3WGS7NXHBMI4MxhnsOnZJlAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFKDwwV0I8ZtUEIex4A3nI0lauoWkMB8GA1UdIwQYMBaAFFADLLaV
MSXaPM1vS0L5Q22rUpy8MA0GCSqGSIb3DQEBCwUAA4ICAQDEVTppj9ZOL/AIDoxc
I2JKL24eHWO7G7SaKKmC/Jv3l9Vd/lRXgOzGAk5u6Y/wS3BPtMVeP2YE5QHTC8+2
V7IrHp8rdNUCp3lr0EY2Irj2k/NQEpgquCfuWxqkkJsnpgIKyTAHk+rjMs2P5ihn
6KpvWqO3drgDCMxl69ZcmVImjZ+PiPL3xloI1UesJGhAX7AgryxbtHsCdHDtIs6j
yTFPg4dHmEXz31GJzPIKX4qPEs8S1JNmYCs27JVOMromLnSlM8FkVfy8vx9wnsDq
Untd/Y0FCNwrsI8QVd9Lbwd6fJssROG+nttu2iipQVxX7g7Ee/F5gMnrTUTDWJVe
NNqpoJvvzUKXo7BSpwXO4EEhQCMBWZsxmQLmTLehBUYe+vJIF6N5Gw5ObrR8Wgfa
M4ZBeM0DOjGKxT/a2qd3bQ49sqYJN8DC7P/4oMKCZ/o8dzU4IRxk7HBLP4MlSNPb
Y8uIFfdgVhviAOjV+xeg2z4QF5WfJeWZyY1gVMieDTHB7KaK1NLqlDauvCN31HbX
nPs/GjXMnOz5YR82N0v6aU1KKxoLZP2wFcF4dO+D8autiWbuQa0bTx3+JyBDvqSm
rZZ7IyY1Mt+Crzfv8TUNsYL4SW5ywHtBfPH+qUHL84BpSTTusLU//ju8f+02xNgk
xPQ8Mj+Wn0i5FA9krtSRk/xUbQ==
-----END CERTIFICATE-----
`)

func schedulerApiCrtBytes() ([]byte, error) {
	return _schedulerApiCrt, nil
}

func schedulerApiCrt() (*asset, error) {
	bytes, err := schedulerApiCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler-api.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerApiCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXTCCAUUCAQAwGDEWMBQGA1UEAxMNc2NoZWR1bGVyLWFwaTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAOtflFn/hYblXxFOaGIR//UQ9DyoGM8kpHIp
4SusQ+IXMf5hXQ5CE+NnAIvJX++C7LP0eRRvrZsvVfIxcLhLVFGOk5FFXwR2lzso
CbjVC4JuPME3Yz4K8IJKClRF9i1uHsAsW3fGF+sNraXDYNQOevAYmhasKfDSaBME
g5W5hot5RmOrsng83LDLd5O1auID4SiF+WCn4nIA0gxh2R7RrvpPFleejPEHu5Ez
gs4CSOhSrm9dmINe7avt0e8mD71Izj+l0Wvn968NVlvbHGSU9j2HG5WCOve7trXS
KndUDm3d6jEj/EwQujzyt3g30u/cXdYZLs1ccEwjgzGGew6dkmUCAwEAAaAAMA0G
CSqGSIb3DQEBCwUAA4IBAQDku/AWroSa4LBuDrtVKITTWVI9nzPRmc/a/yVPDcpj
U4pFsN4Cl0C7JIiIjgD15q7pRh16ARxdGs+ReaJY1zohBQsscqrIKrSrk/CcMK9c
X6F9T03sLUmRTc03APttxtgPxCBVTJjdScblkfS5UfjgklBe6FSjBRZgMHtzXs/9
FNPtsJAZWytDgZbtHHz1BBtUh2AzTjbr8FuR/A0PDE+/6TzDmVHcpOHk/AYIGXvb
1l1bcQfgVMAe0J3UA4WsXJDgnN1+wcezmaF5cJ4qegsiGnjdXdTpT2QoWjjZhtXC
dQ6birx9Ul+nZMGmzGTUfZXyKNNffdnvTpHQ+JcjX1rn
-----END CERTIFICATE REQUEST-----
`)

func schedulerApiCsrBytes() ([]byte, error) {
	return _schedulerApiCsr, nil
}

func schedulerApiCsr() (*asset, error) {
	bytes, err := schedulerApiCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler-api.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerApiKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA61+UWf+FhuVfEU5oYhH/9RD0PKgYzySkcinhK6xD4hcx/mFd
DkIT42cAi8lf74Lss/R5FG+tmy9V8jFwuEtUUY6TkUVfBHaXOygJuNULgm48wTdj
PgrwgkoKVEX2LW4ewCxbd8YX6w2tpcNg1A568BiaFqwp8NJoEwSDlbmGi3lGY6uy
eDzcsMt3k7Vq4gPhKIX5YKficgDSDGHZHtGu+k8WV56M8Qe7kTOCzgJI6FKub12Y
g17tq+3R7yYPvUjOP6XRa+f3rw1WW9scZJT2PYcblYI697u2tdIqd1QObd3qMSP8
TBC6PPK3eDfS79xd1hkuzVxwTCODMYZ7Dp2SZQIDAQABAoIBAQDXqOu0ynr97ov8
v2rE8NklIjOmoB6bLWe/cr/t1Bkev0H/YhZxSfoPEgFeE1Tjj4JyID4Qi4L1/Zky
IDq3oc3QLGLpaDZ3UHGgsj62K/4vs/HW13kHD97uggiUzsWROqTST9I/HDIuHIpO
p4XAxsO92czVmUmUbjUNt8UZGrQ8dVA0kywHgprbEGimuNq9WR+yOqPtilqdoUbT
oZ/mcEwmUWX3bfZz8hOlNhDW0e0N34aGWO3BYvmD+9gbQ5cxll1qRbD/U8H2elEM
peinODNmiuO+ZWuSLYobAGdfl8WKvpRdS/ef34rxSb8+T9IS8PBnpRdMqP/jE8UQ
raDYThYBAoGBAPmty8pqdwiTo00YRqw9WmiDnorVhDX/2AKGcfQC+nMNH0LyrrJ+
QVck7MqNdD46FhaQjcr7VU0SAhSonUcQcDGliRF4dh1oQm2GBs4JhzufurPkGpr1
vFYcnSKgxaGKZ4rXmGp9Jck0aB3x1uEK5jAXORxmE3ps+WkOu4WQZFIpAoGBAPFV
ETiijJaqK+bag4sMZWh/aVl/0s64+yhh9Ap0YRRnTANgwl1oTVoGDZm02D1uZ53H
nzfl9mnMGiPniIAkxf570Bl99pZ/j5niWcZI59Nzci9PacPsVeLY31iZ62BlHbNW
Ihe58jGx5F1T1meMaNQ2+S2uSuKVncFOBx2TlB3dAoGBAOG9DZS7/1Ukzq9kdHlD
m1sFLTGO7FM6Np3J2ntoufGNeqc37VT6K69TdjeH/wJH2DKcjWZpKG1fC7yL2m8m
4JkydiPyiq/51J1bYQmlubvhpZcBdECITrh4dGWbgDOWhBkW5fnZnnE0zbHNNp8P
EKGITZ1seM3mevVOWaLfsqRJAoGAfiec6AE5Au2UI4qo5wAk5rpsBOgn9/6E9Hg4
DVsHAJZ7Cu0CzbdfcCbn5yi9PWfAbJ9UoPDqniWeqJQ5K9uNUNnCUAEj7Upjc+r6
SQgFf+jCkO6veEbMItiB8JwNigdxvjTRf5upesbmfM79roWcqwrNuU56QPY7UDiM
ya5C6FUCgYBYhUt459/pKfP7JzeVYJzJTQT06TOAgPVTVo8vnyUTADLMs5171qMc
W5iwfPlCKeVg79SJInsoqONeBagV2hIIonacVMC2LM98BLfs2yjTXu+zWnZpgGgB
P8JuG1Tq6I4P9N+Qw129eYdAjTNt3DhDjqDBYHrQAePyuootvd2oNA==
-----END RSA PRIVATE KEY-----
`)

func schedulerApiKeyBytes() ([]byte, error) {
	return _schedulerApiKey, nil
}

func schedulerApiKey() (*asset, error) {
	bytes, err := schedulerApiKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler-api.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKzCCAhOgAwIBAgIRAJWYPLeIf+uognmxGSKEypowDQYJKoZIhvcNAQELBQAw
GzEZMBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTAeFw0xOTAzMjUyMTQ1MjJaFw00
NDAzMjUyMTQ1MTdaMBQxEjAQBgNVBAMTCXNjaGVkdWxlcjCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBAJnR5P64L9F7lDNvwY6va1+x2Bh4zmuO7Ur/J0CU
TJlq50KiXEmKjICvFrfhXe+ISGmNwXLMjIAOJ5B0zw3eqXJOe4uCQzGpAeYOzfre
4rVurdKRnECgNHn8aZsvbZYhCMFGLdb7o/0RBfd7AFF2osnupauodKMhNSDXegPN
x5W8Vaaa/DdqQLsORQfCtFfxrnIQTut65X0mBjvf9FuH+ihaiHr+ZVRmuVUb2M/v
j86z8qHjRpj8wXE6VTjLxPvkcQ2eHrziStnOFcNIb9ict7TMPRI4RJ3XrIkjUIqh
6bhuRogz1c99WB2b7H8s9PaUE29Ku+79nNQAv/VR+FudP2kCAwEAAaNxMG8wDgYD
VR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV
HQ4EFgQUZQxXbF0gEFcjaF+1fQVOWzF+fsswHwYDVR0jBBgwFoAUUAMstpUxJdo8
zW9LQvlDbatSnLwwDQYJKoZIhvcNAQELBQADggIBAL+liYDZBAA26upLVU3BPEpm
VZRABbp5u19l6EZbnLILwo6DLxFkTCHnxyYJE+R0ODqVZpgDEzZlFSsBf/voCyjF
SPTtjaQ64VMPbvaVXO6iGt5pMO3FnlHL+++Nh7GzzhkoITl44UsmbsfvTM+bIwmY
2u4J774usfAIPWhjRZYy1WBjOVeaN06vXX+h5ybDWiwXNbPp+cyKlI/BNPZg1hGC
KU2WN04c6xG+7wOofwdE2y69A/ODezk0Q6qj94pAcqT2b0Hbb91/WekGP3Y4N6ay
SoW+i9WDWs+xdfvgugIVRQMJ3UH2xJhH+X81Fv3K1DHJYfliu+elBeQPatgQrj4t
vN4WZMxQP3a79lIQG4uGM2Ppo/NjfosCZoYn1oPOyUTw2qhG6/QZ7wUEAmHui/7G
UkBJIec39wHx0eOpairHcfaemcMWjMdwalxYHMv7FFNNZ0cpYHK+2ZpCxbmdmbIR
tKJYFsmmeu+N1jH5Sqs5pWo/adSMvGmKmYV2BTo7/wfWHz++EgtX7Uky4WIDxItK
zVmYMEQU4DBeCtzak4MH790P8why4A0MwD2NUt/Ky2kMtqe8+pT0AUfYi+NKjzjj
P0JKMCcVL0D1We9k7CUDDSCWtO9dP2C+dGh4gdenHyzLVIf1YQFC5r+ieQyQCWe2
sD2Uta0MwMZMYVLyGiGd
-----END CERTIFICATE-----
`)

func schedulerCrtBytes() ([]byte, error) {
	return _schedulerCrt, nil
}

func schedulerCrt() (*asset, error) {
	bytes, err := schedulerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.crt", size: 1505, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWTCCAUECAQAwFDESMBAGA1UEAxMJc2NoZWR1bGVyMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAmdHk/rgv0XuUM2/Bjq9rX7HYGHjOa47tSv8nQJRM
mWrnQqJcSYqMgK8Wt+Fd74hIaY3BcsyMgA4nkHTPDd6pck57i4JDMakB5g7N+t7i
tW6t0pGcQKA0efxpmy9tliEIwUYt1vuj/REF93sAUXaiye6lq6h0oyE1INd6A83H
lbxVppr8N2pAuw5FB8K0V/GuchBO63rlfSYGO9/0W4f6KFqIev5lVGa5VRvYz++P
zrPyoeNGmPzBcTpVOMvE++RxDZ4evOJK2c4Vw0hv2Jy3tMw9EjhEndesiSNQiqHp
uG5GiDPVz31YHZvsfyz09pQTb0q77v2c1AC/9VH4W50/aQIDAQABoAAwDQYJKoZI
hvcNAQELBQADggEBAE/nZsVnmbuBBNn7XX6rN7YRokM85I5RvAwiEfIDgEKmi/HO
nXLMJt16jwSjQd2IEM2Oh/iPF5VEnah7eO1vRKoSr8WjDkl2GkssCR/BfqhGhO78
He1L+ZRcYjPBTbZzV4FNbBvDX3b0n8UIBE799koUxfw7MoexK7jCSPeuVTDOJRgd
tf+nQnhsSmCRgIXnqy7oBqxThR4+iKFIyGZHHQUKuZDdb51k9KtQPifLk+HfuGem
hI6LuRWaZrOlhPbQFc1IEpm89+T4ZNFKWxVCKC4dNsj/+L+0h2MAS6uC9TEWYc39
oJJXP4q45SlyV5h0And2pAlGuFGK94cncCWYb68=
-----END CERTIFICATE REQUEST-----
`)

func schedulerCsrBytes() ([]byte, error) {
	return _schedulerCsr, nil
}

func schedulerCsr() (*asset, error) {
	bytes, err := schedulerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.csr", size: 891, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAmdHk/rgv0XuUM2/Bjq9rX7HYGHjOa47tSv8nQJRMmWrnQqJc
SYqMgK8Wt+Fd74hIaY3BcsyMgA4nkHTPDd6pck57i4JDMakB5g7N+t7itW6t0pGc
QKA0efxpmy9tliEIwUYt1vuj/REF93sAUXaiye6lq6h0oyE1INd6A83HlbxVppr8
N2pAuw5FB8K0V/GuchBO63rlfSYGO9/0W4f6KFqIev5lVGa5VRvYz++PzrPyoeNG
mPzBcTpVOMvE++RxDZ4evOJK2c4Vw0hv2Jy3tMw9EjhEndesiSNQiqHpuG5GiDPV
z31YHZvsfyz09pQTb0q77v2c1AC/9VH4W50/aQIDAQABAoIBADUg1iNUos+MC4go
lYYe+Ms4thbdww5Lc5JvxrL7hemHjxDo209bV2QrFYG1iahuPfSXTbXFCNJCEVBH
yCxWN9iPWwS4nVTNtyYq/uIjkdJwxADy4jFAJF/t2twK6aLtDgUTpEmY6O9Drffo
uBdrDpcIophDuuWNVrhdNHuT29fPh/MoDzwZ4cY5OBfyQ3WPG635VyX21fbuRzB2
PgBemeV5rzIQPymNWAnLTzA8UkSCNNLq5HNe2QSH5Vj2pRA/PLDKzsXOkK2kOFSd
tEvHfw0T1qMttUwABCOW6pkd9IXSiaQhZOBeeU8cEajCApr2vbLnTR4bNAPsYlyh
L1qNFXECgYEAwOVP/X3woAtXH/a8y8Lc6GWjJ5NAcEvr0TV4hM+r40VWO27EbVzN
KJMDsG287UA5JvasvfSEbFFZVrYdZ0LxPbcvK3wl/DWZwNsHYW+jVjEBPDFMjGR/
wT2RQjl9MNX+Lu+tKa6zFF+rB2MrvxvL6CWv4DZtoI/RZDhzXhKgLbcCgYEAzCQL
869ItF0T2xb3wX++w0bcpuCkinqwy9yWlzxHo5M456Cz6mAjbpF4o3r+W279J84j
xGvLkME7ONt7liV4xtt7qrrctul0AQbyjwEFM4Bpp7nsB+nYktCUeVlTQNOFIj3h
c/fbey9401JWwxNb6Gha7+0f/4iI25z7a1TV+98CgYAKROsCQs8pphDoWblpW6Fp
GegatkMq90/BnoghAfFTsyBJH7eDXvppG5KJtP3m35FrWpyNrFPUdGw+KoncMnsn
XvY66WwYRj4+PyrgbBIVB5zaOIGrw7ntbrqp/OeGTw4uL4JXgr5z6jfvt77feLpd
TIxVcnBZqO5r2HmD25f9dwKBgHVZu20oNFlKsGFfwKkBcH39PFbKCIx6nytx8Teb
NWt49Fti7EotXfDvuzPvPkz9bpX1UGZXuTvLeOnkchUMEXPvNBYfOUYEyeTVQ5al
dYH3rcT3ghHCgfdT5CYmDU/UyFG41OO/dfJIheKlEK8vb8QYST5nR9+zc0kb4wP+
TsxtAoGABjrRut9BXVlqIw99kGnE++I7VjnAdganQ43faqmvKu/+Vgdl8qxHU4Zi
vT5I7X0TAN0yjjZOH2fZSZ4KhVM87J3BRAftpTL+Xx1qE9jWweP7j4wV6TW4+Su0
fxmP4k1TBj6GFg+/ZtlyhRmSyfAd76wND/NlDhqNfl5o7U3J0kM=
-----END RSA PRIVATE KEY-----
`)

func schedulerKeyBytes() ([]byte, error) {
	return _schedulerKey, nil
}

func schedulerKey() (*asset, error) {
	bytes, err := schedulerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"adapter-rlp.crt":        adapterRlpCrt,
	"adapter-rlp.csr":        adapterRlpCsr,
	"adapter-rlp.key":        adapterRlpKey,
	"adapter.crt":            adapterCrt,
	"adapter.csr":            adapterCsr,
	"adapter.key":            adapterKey,
	"scalable-syslog-ca.crl": scalableSyslogCaCrl,
	"scalable-syslog-ca.crt": scalableSyslogCaCrt,
	"scalable-syslog-ca.key": scalableSyslogCaKey,
	"scheduler-api.crt":      schedulerApiCrt,
	"scheduler-api.csr":      schedulerApiCsr,
	"scheduler-api.key":      schedulerApiKey,
	"scheduler.crt":          schedulerCrt,
	"scheduler.csr":          schedulerCsr,
	"scheduler.key":          schedulerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"adapter-rlp.crt":        &bintree{adapterRlpCrt, map[string]*bintree{}},
	"adapter-rlp.csr":        &bintree{adapterRlpCsr, map[string]*bintree{}},
	"adapter-rlp.key":        &bintree{adapterRlpKey, map[string]*bintree{}},
	"adapter.crt":            &bintree{adapterCrt, map[string]*bintree{}},
	"adapter.csr":            &bintree{adapterCsr, map[string]*bintree{}},
	"adapter.key":            &bintree{adapterKey, map[string]*bintree{}},
	"scalable-syslog-ca.crl": &bintree{scalableSyslogCaCrl, map[string]*bintree{}},
	"scalable-syslog-ca.crt": &bintree{scalableSyslogCaCrt, map[string]*bintree{}},
	"scalable-syslog-ca.key": &bintree{scalableSyslogCaKey, map[string]*bintree{}},
	"scheduler-api.crt":      &bintree{schedulerApiCrt, map[string]*bintree{}},
	"scheduler-api.csr":      &bintree{schedulerApiCsr, map[string]*bintree{}},
	"scheduler-api.key":      &bintree{schedulerApiKey, map[string]*bintree{}},
	"scheduler.crt":          &bintree{schedulerCrt, map[string]*bintree{}},
	"scheduler.csr":          &bintree{schedulerCsr, map[string]*bintree{}},
	"scheduler.key":          &bintree{schedulerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
