// Code generated by go-bindata.
// sources:
// certs/adapter-rlp.crt
// certs/adapter-rlp.csr
// certs/adapter-rlp.key
// certs/adapter.crt
// certs/adapter.csr
// certs/adapter.key
// certs/scalable-syslog-ca.crl
// certs/scalable-syslog-ca.crt
// certs/scalable-syslog-ca.key
// certs/scheduler-api.crt
// certs/scheduler-api.csr
// certs/scheduler-api.key
// certs/scheduler.crt
// certs/scheduler.csr
// certs/scheduler.key
// DO NOT EDIT!

package app_test

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _adapterRlpCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELDCCAhSgAwIBAgIQJZm30Sf8fYYHXV3Nxgl3ljANBgkqhkiG9w0BAQsFADAb
MRkwFwYDVQQDExBzY2FsYWJsZVN5c2xvZ0NBMB4XDTE5MDIxOTE3MDgxNloXDTQ0
MDIxOTE3MDgxM1owFjEUMBIGA1UEAxMLYWRhcHRlci1ybHAwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQDIwnWJTb/kGBdsExKmZZ6ukKNDoPTLur24/CLz
LKeVFupmv8be5OQLQL5xz+S6HBtRsoU5TVmHFsnOldw8XC/sXBXhnuvv6XLf+n94
OLxzuFKOUxMhbiba5hVhLHgBJ5zYC3JoVMPKZvBeGAcbdyomuvdKkdYSkRfvhICH
WqV1PK3WORWKJjMJ7rx/MQhLZNmg6QWTDhRuhyOHLRV40sRHOoEx0hOfT0+nBo8a
ctV9DPJXFyIvFC5mHx+WKjm3OuGlbEtZ8+Yj7CnLM693/pcuDSzpGabaIYsOaHEv
gIKhCREmCDvn1vROT6pAA5hsSUrgWAIQiD3Z69eVtad796fZAgMBAAGjcTBvMA4G
A1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHQYD
VR0OBBYEFHiWMRFf0wt5Nh5ZhxcnKa240fY7MB8GA1UdIwQYMBaAFKZ6ZSQnM2Gm
5f8j3OdqgxON/6IXMA0GCSqGSIb3DQEBCwUAA4ICAQCHqx2B3UPYc5Awxc/ETDRt
NIf44pbojA3vRXyLjFZcGYEBML+HNtvyJAhVpSeCVotl9drCAqWr+srCTy+Yo3+N
tOccCzCORTNLGp9l0JL5Y+HvUUdnUS3BqcQP2Bs4fh2cLKh+CBvo/LMiElZx5cOg
Kqm9LE+8Jgl7Kml3jjB72HBM1NIWR3XwzIo6erwB64s6xPAmjtNalGvaLKqi2ESG
H/RhP+5I+ucvbXSlNeKFsVMx/gG53rFceUgk9rvNlYQoD+osp7eFO0EKDBwDVMJX
o6Zwe0Nm7oo8/EmFEOVMMnLJFbmc5bfrr3WjPpfZsc9ucQo5BNCv8B3J+4mzQ4bL
F3ZtknE6I/7vV5w6Ppw59UpXY5hdtX+HD6wWGOURZERLHWQM5mISqSj0iyDOZ2aQ
A/5DwOxiJwzDT6p9dcyYAhofumQayiwwhtJS5gWFcZYSE504XH5GpOAgxgx84LE1
JFI+tCmtzRHPZHBIwBRglGpNU51VVFO7xCr1y0J4UREZx6bsFCPE3rFC2fdM/NZm
r66uTjhstxs3fz5MYkTvXVhVLd4vz4t+wlhBu7yPX9OiDmE9WL6wjbYwfviECoa3
w646Fg0y99d7zU/Sq9LjlwPmSoA+vYcRFJrN19mLVzHGhQJIf4+46WSnLDbKT/Ww
fUFtTi66zCHjF0Y9cZoy+Q==
-----END CERTIFICATE-----
`)

func adapterRlpCrtBytes() ([]byte, error) {
	return _adapterRlpCrt, nil
}

func adapterRlpCrt() (*asset, error) {
	bytes, err := adapterRlpCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterRlpCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWzCCAUMCAQAwFjEUMBIGA1UEAxMLYWRhcHRlci1ybHAwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQDIwnWJTb/kGBdsExKmZZ6ukKNDoPTLur24/CLz
LKeVFupmv8be5OQLQL5xz+S6HBtRsoU5TVmHFsnOldw8XC/sXBXhnuvv6XLf+n94
OLxzuFKOUxMhbiba5hVhLHgBJ5zYC3JoVMPKZvBeGAcbdyomuvdKkdYSkRfvhICH
WqV1PK3WORWKJjMJ7rx/MQhLZNmg6QWTDhRuhyOHLRV40sRHOoEx0hOfT0+nBo8a
ctV9DPJXFyIvFC5mHx+WKjm3OuGlbEtZ8+Yj7CnLM693/pcuDSzpGabaIYsOaHEv
gIKhCREmCDvn1vROT6pAA5hsSUrgWAIQiD3Z69eVtad796fZAgMBAAGgADANBgkq
hkiG9w0BAQsFAAOCAQEAwyIeu5oqan42NfFMywazNhHT/lbnH18GI5DY2t6iQWJS
nwBfKhyx3yiPdmmqVUumXgOldPAz85yiaEUF6XEMU8LyjEGmN47QMzafUgn99wIb
kFFVtrDKlDTAfau94bsbco6oqZWbfaHdN988mG+lNuDmjS92h0spwtgJMlODAKni
HeUwdrpOAVuJlvI1cNVa4U60Ie+p7NzaIpTI9Gy24MOUp01IceQNHP9+8AOGr1eb
DqLHndkN1jUuwMIfx3sxG3YcIN+oiVTKp9r+IecvniOHOIwihGplDl18ftRKr3AG
UuSXY9mQ87MOunz0A3mIjmTtGU2SOmgwZ+scydtQOQ==
-----END CERTIFICATE REQUEST-----
`)

func adapterRlpCsrBytes() ([]byte, error) {
	return _adapterRlpCsr, nil
}

func adapterRlpCsr() (*asset, error) {
	bytes, err := adapterRlpCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterRlpKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAyMJ1iU2/5BgXbBMSpmWerpCjQ6D0y7q9uPwi8yynlRbqZr/G
3uTkC0C+cc/kuhwbUbKFOU1ZhxbJzpXcPFwv7FwV4Z7r7+ly3/p/eDi8c7hSjlMT
IW4m2uYVYSx4ASec2AtyaFTDymbwXhgHG3cqJrr3SpHWEpEX74SAh1qldTyt1jkV
iiYzCe68fzEIS2TZoOkFkw4Ubocjhy0VeNLERzqBMdITn09PpwaPGnLVfQzyVxci
LxQuZh8flio5tzrhpWxLWfPmI+wpyzOvd/6XLg0s6Rmm2iGLDmhxL4CCoQkRJgg7
59b0Tk+qQAOYbElK4FgCEIg92evXlbWne/en2QIDAQABAoIBAB/ENVjuhoiPD1W4
huDxf3Rbypmu5E1AVTjqHJWh4TqED78GZW9rhHILYpcbsDOKsv/wYYg5pwrrHi+k
It8iLysVPxkeTnL924F5X6YkRB2Dcvy2RHaruVY1xfhEUxDLtdOxq/66OujR9QLO
hoFgD7llKDASd28kqkbqDnRccYXlNk1GcGvZ/m6PxoAHxjg5LpAlNtYRjcj8vCU3
wTZXiw05Jm6waySew02Ld3XTXEWolHC5KGKOOO6A1BBEpCqd5Fi0E6KMaM106XMK
ZGljL+12Ot0OBlNNTO0WEa4kfhHIS29q1zkhcynFIvwWamXJPIGrZd8Y5Mn4mMQw
cB+J92kCgYEA6c472elUnBFQ+H4ZBUcEPrCnWb94B38EZnViZcdGH/gnNg3zC9K6
auH90gvZnbXbVDRaYFFTTtquC5ZNZyyI/j6mxQgfmTkyqKylm69BxF4oDzXFEvNi
bznUZI+yhl18RJe2RvvzsrLoyqfs1ShifgB3DXqAWB2BBnm4JzeMJh8CgYEA29Eq
qeu1JM5+7jkgJvX5pIiUDQK6V+uMSftUVAFRXA6WyGdkiisI7CsFKKifYxpEkxfi
mWMlEGf/aDP7uCU7RSVK0u5wocrvcmhF6D4O5g02bPZO0P4b+Vu80AnBVzPXIAD1
N9KkMw+rFqoTWBIxGYda3oEHQiQqXdpX8ezHwwcCgYAP4CMMPt2x4zMeTGGijBnr
r88NNwUNbUB9PIc75fYLAayX7QaNzPc/fqzfcFKMdOa5pvxkAeGoPw0GWGRVFx8O
NG7afhy3KL0Z2u87zQCoNsR9k+cXzFLovoJ/eYpjuUFQ3wRPeZgokCFicViReLaH
W7y5u5GvagFy0R0B/LGVfQKBgHIZdo3Q/avnS9eX62qNz1FqW38NZXBxodZdEP6x
2GtyXy4TDQrzH6SHCBx8uo8UeXfotARuhDSp5tdN9GE3YjaYDujCP9CbqAK4wWC1
pcIgJZoVl/+/hwG+bpmGFseO7yF7nc2mFvkyLtqK2ZOjjbz0l2RbkUrxvtQMnA3F
nENNAoGBALMq9EnzfNcc+/iRTCYv9QR9lfPqkaPrvWFg8SuPXLSqPwA3QsHJG2Pl
pON414S9LpY3qsXO2JzaxUV8T+ABkbIf5JyN5fyNo/yMWdIlNzq6fV+avMUXqFiL
HVGRoTE0f9HyX4ZEhuuZ80NCRVmhXQ/tIhS5JGVBD3oZfmwoySVo
-----END RSA PRIVATE KEY-----
`)

func adapterRlpKeyBytes() ([]byte, error) {
	return _adapterRlpKey, nil
}

func adapterRlpKey() (*asset, error) {
	bytes, err := adapterRlpKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKDCCAhCgAwIBAgIQID262j8eYjU1zsnN/HHmSjANBgkqhkiG9w0BAQsFADAb
MRkwFwYDVQQDExBzY2FsYWJsZVN5c2xvZ0NBMB4XDTE5MDIxOTE3MDgxNloXDTQ0
MDIxOTE3MDgxM1owEjEQMA4GA1UEAxMHYWRhcHRlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANhJrLRzZWeOx6mdOq/Wx7YvjhnCMckG0pKkNX9DtCln
ETbiu7UFVGD1PoMQHtZZa+8thATeDtDiofDZBaTaLyqn32tVaJOFx3mhKVeWcq6a
e3zIBgYH+p6l4u+14Hk5YD4DqSHfdzQ//wYii1Ib7er8pzfh61lbD6N1lEjJr21e
V/Ny+imJFvLomkWqeeXbinOYcOlIFO72bgf5U9DYS4p7CEkvPCywBtSE87ru5S+Q
UlTBi0a7GkpNHUmyxN6t0fBCQ0NbdXv9A0DWp88BrGFm5ydAqt4jDk3t8RSoUYO1
vbuw7I89WYARtmdHRl8A8hn+FXX6UQ1NZ5SC1jk2+EUCAwEAAaNxMG8wDgYDVR0P
AQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4E
FgQUxP2qq5zFmU1dsZ6nzLwzkFDPh+8wHwYDVR0jBBgwFoAUpnplJCczYabl/yPc
52qDE43/ohcwDQYJKoZIhvcNAQELBQADggIBABV5AYZVGWrkA5ZbSp4iz0vifxiG
HwScoORBPe9FABELnupIuZ8vJTqLMgZ0hYNLqrJjvA+vjbCsJGG95gYiz6uvYhnb
NHVHv2acdPjmBFCCvKGqVPzj/Mxvhwe72DJM3OSb0v+BuvuIXihlhc+2V7hQyZGn
8xU6i2Ajc7/ZrL/tL2xMm3C+8YLd48IMDmy0pii8+XXR7qn/qWBuqJQdXaN4Rs29
9LTcHq4MKj4DfrlY1sZ+Hc/zTehPNpDVegFvsYQaSsE49VkOlo3nVoFPo/nnik8x
uPCFEKlbOZVZKcOYKOnE+GUZbp0PBuH/ZpMJpNUbFXILkVDf3MF3GMDvQLGdTt1o
QsRDgmI/Yk4mErrPJkwLAG6t+gdUaeOLyfY//98CV4PStgWlwhBpTW0+umg1eBt5
bKm4JA10grHY763LU/hLm+t0Nhpn7TOyTVIjNATsk5tD7f4LtFgU+mP9wKqGBqAH
Qw0IIe3WoXaF6ybtkC9K7y+JIQQrsWBHHnEHh11eLJejdmsZqZofKHRPbfAxvJPA
ajFVCRtZ5FngbMkNwYkH4cnXdcIv5MGYjp3cuxgcNaB1e3aERy9qpInCtd6Dbbp7
fc6c2csxGycCUV4/wwA5sIDyVnr/Vpq3OQYa0qKrJU/X63G7NncpSGEAMxaNk09f
yMvKTUZkjN7U3+ft
-----END CERTIFICATE-----
`)

func adapterCrtBytes() ([]byte, error) {
	return _adapterCrt, nil
}

func adapterCrt() (*asset, error) {
	bytes, err := adapterCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.crt", size: 1501, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHYWRhcHRlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANhJrLRzZWeOx6mdOq/Wx7YvjhnCMckG0pKkNX9DtCln
ETbiu7UFVGD1PoMQHtZZa+8thATeDtDiofDZBaTaLyqn32tVaJOFx3mhKVeWcq6a
e3zIBgYH+p6l4u+14Hk5YD4DqSHfdzQ//wYii1Ib7er8pzfh61lbD6N1lEjJr21e
V/Ny+imJFvLomkWqeeXbinOYcOlIFO72bgf5U9DYS4p7CEkvPCywBtSE87ru5S+Q
UlTBi0a7GkpNHUmyxN6t0fBCQ0NbdXv9A0DWp88BrGFm5ydAqt4jDk3t8RSoUYO1
vbuw7I89WYARtmdHRl8A8hn+FXX6UQ1NZ5SC1jk2+EUCAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQCaR6Ojq8aFV+2Wwa5k3RtH9elHPpps3MmAgpu2JvHSqt8AeOn2
hcedWvAN2YCsHb+h85Mi/LcKQAyZTyZGlSZWV9KtgaefjrG+LuP+rqAGCtn7N0TW
DdbtAUkmXgRLQ63v+mExCRnHw5Ldko0IgeA9BVxdefhbeRmT4xqINZliiaeb5+mI
sDTnp1ilToORdoYw/u+2La4aekJd8C7VKeshJrh/jyXGJYgI1GGQ9OrDHVnj1+ge
znQeGCWZOO+oJGOZ8I11iguA4VyW2UnChCXnLrgH0Wc1twy7R6c+nDtKwUdUPeMh
rqDde0OB/gjLcYdoM3OLzrn25mHc81PzMyG9
-----END CERTIFICATE REQUEST-----
`)

func adapterCsrBytes() ([]byte, error) {
	return _adapterCsr, nil
}

func adapterCsr() (*asset, error) {
	bytes, err := adapterCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA2EmstHNlZ47HqZ06r9bHti+OGcIxyQbSkqQ1f0O0KWcRNuK7
tQVUYPU+gxAe1llr7y2EBN4O0OKh8NkFpNovKqffa1Vok4XHeaEpV5Zyrpp7fMgG
Bgf6nqXi77XgeTlgPgOpId93ND//BiKLUhvt6vynN+HrWVsPo3WUSMmvbV5X83L6
KYkW8uiaRap55duKc5hw6UgU7vZuB/lT0NhLinsISS88LLAG1ITzuu7lL5BSVMGL
RrsaSk0dSbLE3q3R8EJDQ1t1e/0DQNanzwGsYWbnJ0Cq3iMOTe3xFKhRg7W9u7Ds
jz1ZgBG2Z0dGXwDyGf4VdfpRDU1nlILWOTb4RQIDAQABAoIBAQCSE0AnJ4CnLlE/
BseqFp8PNpL8ZqGFKaxyCaFv8GPvSoLf1MX9fjn8ueWcUvjgv8gb41u0hdzvywCg
T5J2Qj10y6gjL63PZJzSUrw/QYb20bLxFY6r6BulplfcmbOfa9bKS2KhU/GIQmiU
1iPOMrq+6CBvp49x7ARl23Voq35lmAGfUigXUTjA4aF7lEhJNMdrTHoe2Rv1UT/k
T0AYrjfOr3vVuLiqMzHXZZPeRMrv4FZ7PreHc4qvaDuolvW2fWuFeZR9iVBphPAv
sm21NXubjvPolwTUaNG+BIuHXIeuLrZ6fLiKRnnsHJE5VtQ8QMU7pd9WMxdzGxUx
ip/0ECTJAoGBANtG/HWFqNAHyJUXQvYacDYG3i/PdxSADq7HQe4Tnryqb/xI926S
3nwZcVV+TqY6yxmNVnvBZXz21prJkSjuwE154c+ms917yBQO41FoGmTuLxb7sYUE
bIL+wT4Pknnv0ZpSc1AUuanqmuvCKUxOuFyth3ZudKpYUrjqLThAD+afAoGBAPyC
hUItKbf0j9pCR1W5agHp1Ju/X+zEGrfOTq+q15/9ZNqT3LT62+UC9dkAIsE/l9Qz
vaLsoDlatd7K70QEFVgeewujDXgI95UF3QEPJUauO2nqjl1XzPj/t0TRJaAtSQmk
s8FuUP76ythCrXBwYWAzA0mmPK9/QbphLsbBl+qbAoGAFgQGjPYigOCHLxDq1DLL
WWFPJZW66wAAeWPgJrspkN+75qSc0ylD1UnoqyDHXMFCawpZyIseWXGfEmNyg52V
CTJXjbW7EV3ANONZx26gV8niSHh01lofWvehB04g8sU1Uj08/qlWCs1XSJxx8Qtm
T0fM9gMZC5FanN5GNAOalRkCgYEA0oBUauiPgMUmLwNVyIb7coDmNriBVTXeOCCK
xDMd8kghjX36Xf1K101yeeZ9ErDa95HyoyG0KFwQhZyTfhYRXRZ76SWSkuCW1OrA
ZKOlpZiV+yQIbpRFUcaLl5jrTu6xlpJxL+2xI/8antJnF/b3lmSwdvNYX80slB10
C0lURcUCgYEAy3iWxOn9JXYjRkbCawHBb99LXuPyTrfw9sw+ATbCwSRlxz8J/mrF
He7XUrNTTqullLEAKOn+It4nZQnEQepexqmgDg55eoYPamNIyM16qV24oqZwZGuT
gh/4JPkTD8KkI5NwH+JAsYDl/I23I/o0jGpKCT4ik5rFuQwq5aoQqXo=
-----END RSA PRIVATE KEY-----
`)

func adapterKeyBytes() ([]byte, error) {
	return _adapterKey, nil
}

func adapterKey() (*asset, error) {
	bytes, err := adapterKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaCrl = []byte(`-----BEGIN X509 CRL-----
MIICijB0AgEBMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNVBAMTEHNjYWxhYmxlU3lz
bG9nQ0EXDTE5MDIxOTE3MDgxNVoXDTQ0MDIxOTE3MDgxM1owAKAjMCEwHwYDVR0j
BBgwFoAUpnplJCczYabl/yPc52qDE43/ohcwDQYJKoZIhvcNAQELBQADggIBAMLV
tKJwFNHww3B6QsbYz1C711Qy4lAn3ZVNFmcNiY1mrAAae0Xm+LprsYpg3gpk8eqp
SL5z57Z2gpW1i9HYkG+fkhnJcIBKZlLK07M5FcdA8+rQ/FZdFI81ILh18Ydg0YMi
Z6cpVJtGpqZKzY9Dotdmj+SjhMu1d9X94vas3/Q4ZatLne7+h3QuCrV9nMv3M10U
+9P0ICPXw+keFS8Eswc5BIFEROyOwRDhB8Lw+QLR5jPCAXb4oUWN3ejj9EdodAu+
evADISXphFrBarG1Y1JuXdf+W/kSvfSn0vu4NLO68EHRMAShpdzFiLLbdshqocXA
kRFTCUYBKSey/vnjnsamF51XdrXpCRcTopYu/hnfPlkZfHOccDLQxBmYX38jgOaa
nE2Ck0gPa9eaBDtsVTD57m6M1GVJpKw42cKWTBYyd2Os1j8Zlx+rdDPsd/krpQxG
yUndUxH9Lg55QGDi2EWdOSchwvffgqbrqk2FIFTtbYkcmN/nsPOXMadC7qoiM6L5
w4bT8DaiYRmdtPanpNwsw640/JyUeNVCnuHwdSwz5KWpR83myK8x8/tWAxI3LwUH
d8oZU2RpGLz7My6E8HGwBMQS9EMgfkCNFkPiqhN2mHC+ifA/6VcMUban6TpGxlaS
PZXFrtyP+JnjFVDhaZGnsy3iagUmj0onGNuKyxYM
-----END X509 CRL-----
`)

func scalableSyslogCaCrlBytes() ([]byte, error) {
	return _scalableSyslogCaCrl, nil
}

func scalableSyslogCaCrl() (*asset, error) {
	bytes, err := scalableSyslogCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.crl", size: 934, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE9jCCAt6gAwIBAgIBATANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDExBzY2Fs
YWJsZVN5c2xvZ0NBMB4XDTE5MDIxOTE3MDgxM1oXDTQ0MDIxOTE3MDgxM1owGzEZ
MBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIP
ADCCAgoCggIBAMRvIPnBtRIxTQbZktCcmTpAK5oeyrtD6M6dwvnzTQ4tpjwAxW4v
z1neg27/89Qablt7GTFD83WTARMjWTu/q2STIfPg7tlz0m0DZmkMG+6bLr+179ol
iQrHm9TmWCAZNfhBQUnI9SdbKq0LZpT0CdAWVZdmENWVz5cihgBIWCLwDXAvqeFE
OFMONDxJqvQBIAYV35SCOE8z7PrptiPxIfZ0+rgcuMySfQu0aBnNNcyMDIx87TjM
GGF1BEHVq88hHHEhcnTakrO2coyJn5cdeJX3qARcct/TRJuPWHEvxBSiS3zyo0kQ
o1rAwjcNGMDAFEZW2FJeKUMaHcQaXBHSpD58gtrcKYQMzkd6HxGC4fDJie7xtuUF
GQncR/FVDW53/rw9LdKmuPb3LGGYSv0MpwRlBMdrrQsyxUHqsknlZOTIuFOzfEmn
uz3zbxylzAmyC38hueY7IUJ+axZ/oPJAD8Y0ywzg/EIKUlm8yT2Ro282BkASwxZI
CmafRbPMlvvpIcaHFNJFbrwRxGHra4spjq8q84l43Xcp4ovNPGrpKntxVkZl4c4K
dlrCnnwbrMwkozu4m8goTaC3C5sUS2+YsDdOEVRIOKvUSJUE6BszN63KOgbxhONB
pt5gZ4Azpp9jKm0KyTHE43X3r920x+Df6+E+kvIc8SLXu7FG34kuJQXZAgMBAAGj
RTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW
BBSmemUkJzNhpuX/I9znaoMTjf+iFzANBgkqhkiG9w0BAQsFAAOCAgEAolHhW1aZ
hSnJbXDvPvXw27odNekc/kCUPls574SHZf1GYFFI9mpyKaNpCBNodXw4qWdOFlHv
zAtLZCwbMgtaaW0XA7UhEJBMJ7CLxfjpjbGIzcR/CAiCpSmpZ/v5G0jrfPdsd+wd
id1W4pRVwO9jX+530t83sVnSmBjbZCPc3NdgEJLSqUzQQZTuvk77Geo7TRuyrYUy
mYzKtNZPys43QFUX2js6t7YISKxM13bp5WCyEV1qI1q+PXQ9Yq5wp43DHifWHicm
W8z0x07VBk5xpdmQYRf9v1pgitG5w/PAgBY49ZRGbc565rKysK8n6tPeTsSNy3LT
ntgxgr2sB0VHwgvnjM9RNMphhQ3MCxEvePizhvhyo00sw0WmaS6keWgoFHKhYTGm
yFE+5kboOkkRclUzU220C3sgo4RO5YvIMw1v8NfmyjHqVQVgGkSSxX0kMQ7pRsCK
5e2l7XzT7PRaxAsJgg2md2IJ+PttEZOuaHrgGMhKhV2kfwCxTAdAF4sZjTn5D77O
fvn1Op8A0YkABpYFjW8BDBAmyTzoBOuBYZxhC+yuvytZiIY+Sk5n+r2HxF7YC7Fi
93E9B/8WSwhWqwRL01n0n8OKDGQblIRSfjgAOHFC2xOMLs4uex1FTNi4YUFVy1++
HdKUVK2mFzEJNaPj1P7HFqn7U0gc2oNfVrc=
-----END CERTIFICATE-----
`)

func scalableSyslogCaCrtBytes() ([]byte, error) {
	return _scalableSyslogCaCrt, nil
}

func scalableSyslogCaCrt() (*asset, error) {
	bytes, err := scalableSyslogCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.crt", size: 1781, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func scalableSyslogCaKeyBytes() ([]byte, error) {
	return _scalableSyslogCaKey, nil
}

func scalableSyslogCaKey() (*asset, error) {
	bytes, err := scalableSyslogCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerApiCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELzCCAhegAwIBAgIRAII6Ca5HyrR8KHE3nTCqT2YwDQYJKoZIhvcNAQELBQAw
GzEZMBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTAeFw0xOTAyMTkxNzA4MTZaFw00
NDAyMTkxNzA4MTJaMBgxFjAUBgNVBAMTDXNjaGVkdWxlci1hcGkwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQC17QrmEstXEn+w6htaVJ32AnyC24RxgC++
qA93VtQypNS3oy/9DDFNOV0iC3qkEROCDCsUzXkmPEZl+sc1pNjcICSbzTPux3AP
eiesSoJGAiLEfd/7p6XjxdUewLGpnfnZ6SEgRf1RkavM0GECFiXN8dULKohWBENw
/f2s0yVnBi5hSmWfWsI8nAd9UQAMbpg8blSuYEpZiI5dXae7t4JkDEu4b4XIpzR2
L0F1rPslMTDJ3/xS8bIBsuxLd1F/Gh9LeJQNn5r1NLidn/4L4+KNVps27lzlkQWE
+CKXQk0Lk07vd8VIziGNsY0TMkf5IbiWegtFn1CzHD30lCNrOZRXAgMBAAGjcTBv
MA4GA1UdDwEB/wQEAwIDuDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
HQYDVR0OBBYEFE/YS+6DeSMC2a31M+c0UOMH6vXBMB8GA1UdIwQYMBaAFKZ6ZSQn
M2Gm5f8j3OdqgxON/6IXMA0GCSqGSIb3DQEBCwUAA4ICAQB4tt+yr7Wv0NNpaU94
s+JgC7bIu8xznpnu4x97WqlTAa1rNmJX+6dOwNskFw1pTOBx4IquKYoawUVN7BDr
sXnS3iBlBSjurSqlItJQ9EdN+4+mDTopVLMWOSdrKHd3q0YlQ4o46N0rSphL+ZjI
0T7hB6H58mDn7L5QSBuMFXBcNdty/ATvnuHFOCqWV6QLofvRfOfyG6ZHwBBuVR0P
u3oEGP3TB9A4XcTJWKXPvVcSRv44FNPdQCfvYE/+FJk1RxAo9QFfwiIgPbeh0MNy
jIFt2c87ypaR6+xaH29e3SGTLUdB36Iu2QQGWzlAScpbCZPDyhJPh7wVCEN5V7QT
Yg/P+f4T5+z4Z+57qi2jN1hxaDM1K0jyoAg1r2cPfWCDQVHVeqEwELOrym2nnxrN
Rh4btMynmjtcOCqOBePSTNdMMP38N9gS/Wf1O8223FqjadEBD6NxpzQI8DwqMeKG
BuablzLF5IaPpcz2zycy5/F7YIptLWXwBXo1+9tOy6+yiBlhMu9NEESMYbuafdmO
ZSDcrEZEZdkD6zqnMmrLg/Xknuj/kkX2RThbyYoqR3RKOc6+0jgNsfb0rPKtEMvR
ltXBlWBAWvA/GLzpmmNg/Q7Qm7NCpsINYBsTVHaZcXI1Mw+5qBIcyR1vig8f9nIJ
+Yt3chJZUxEEGLleg1LG8uYRZw==
-----END CERTIFICATE-----
`)

func schedulerApiCrtBytes() ([]byte, error) {
	return _schedulerApiCrt, nil
}

func schedulerApiCrt() (*asset, error) {
	bytes, err := schedulerApiCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler-api.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerApiCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXTCCAUUCAQAwGDEWMBQGA1UEAxMNc2NoZWR1bGVyLWFwaTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBALXtCuYSy1cSf7DqG1pUnfYCfILbhHGAL76o
D3dW1DKk1LejL/0MMU05XSILeqQRE4IMKxTNeSY8RmX6xzWk2NwgJJvNM+7HcA96
J6xKgkYCIsR93/unpePF1R7Asamd+dnpISBF/VGRq8zQYQIWJc3x1QsqiFYEQ3D9
/azTJWcGLmFKZZ9awjycB31RAAxumDxuVK5gSlmIjl1dp7u3gmQMS7hvhcinNHYv
QXWs+yUxMMnf/FLxsgGy7Et3UX8aH0t4lA2fmvU0uJ2f/gvj4o1WmzbuXOWRBYT4
IpdCTQuTTu93xUjOIY2xjRMyR/khuJZ6C0WfULMcPfSUI2s5lFcCAwEAAaAAMA0G
CSqGSIb3DQEBCwUAA4IBAQADfaKuUFWVpuwj4tujP4yEqiCHwjK7Z8DJe3lWvq3f
RVjTnBMAsJVby+fsuanUbdkJPxa9eE3hzNm1sWaYLry32YiLse9pD030NDYh8F5r
TfiWFM/MYoWCH1M0OOCZZYuXpqU02W5BZXbnHVimEVkxnJLSjfrldwqUBo9w3UZb
FmgUH7G2kzQk5GrJ5CZUbgR5d2iTXJEqZ4/rWHPhaRsOcJMRGLOa294wGcdJIWPu
y3/ZFCnjABTmfoEFeTYGj6PNfvGclXOLwZc9gQSzvPaGR7xalUrs1VNjBQiLx6SD
DvBBx1KkgoU82JVdsBvdu/p+SoQEttYRnVcWvKF0fB9o
-----END CERTIFICATE REQUEST-----
`)

func schedulerApiCsrBytes() ([]byte, error) {
	return _schedulerApiCsr, nil
}

func schedulerApiCsr() (*asset, error) {
	bytes, err := schedulerApiCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler-api.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerApiKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAte0K5hLLVxJ/sOobWlSd9gJ8gtuEcYAvvqgPd1bUMqTUt6Mv
/QwxTTldIgt6pBETggwrFM15JjxGZfrHNaTY3CAkm80z7sdwD3onrEqCRgIixH3f
+6el48XVHsCxqZ352ekhIEX9UZGrzNBhAhYlzfHVCyqIVgRDcP39rNMlZwYuYUpl
n1rCPJwHfVEADG6YPG5UrmBKWYiOXV2nu7eCZAxLuG+FyKc0di9Bdaz7JTEwyd/8
UvGyAbLsS3dRfxofS3iUDZ+a9TS4nZ/+C+PijVabNu5c5ZEFhPgil0JNC5NO73fF
SM4hjbGNEzJH+SG4lnoLRZ9Qsxw99JQjazmUVwIDAQABAoIBAE84K3jIUldWLNhi
+Qo6spY/uuxYnrG1+hRxplp3Kuvqrt5QZ0MvngBcrFt42Cy9attEZTYny0uFD7q0
my6W2//u10Io9yZRHlD/BmuV/mhx4aXikjhJZolqykUb78FGk1f6lnwxPf/ZCRCk
5Lk937RwTC8SlE+wh5WaZG5ve2gCogEf+aphMzCxxVUsBT62NX+AuSJpxGySAd1y
Fi9KpBQA0IYYyyGv0X9HhD5lp9V5JS0/j2Di4zWkNeb7/j7sxGUFftPPeK+c8Ihf
UHpYHpOPMyRz7OfNUGkec7iijbIFq4a8IzVZH1Bfig7hALV0cKlAGV6/7KCFJK4d
1ip5fTECgYEA8Fse1E6duuEqWwM0nn2Sm22DbM/YPWGDE30M1Au1EQUXYpv2bJbG
4anTrMemdBVKHNiAEf+7jRpv5ea9b6gVFonOzSFafO0EzXrWdUTfqy4JRPVnQBq7
u4sZxi7e4Nsk+VqzSZpUVQar4jFCE/VZb68WojMUPHDKLy3YG02PMOMCgYEAwcRY
SZWIydandej0w33IzoXp6cv0VcCdojUx6vsDb21x6y8n3lgVAWh4nROyr/CD27+H
KiMb/D6MyNPDipWrY6EntMpy05XH5TQenutuazBRD/deOw+rt8DKYpZwv/NUZUs2
ZBgAcKyQonJRYBLg3ObhEEZc+fQeKV8aSofX7P0CgYB+27kT2UKKxhjy3GhDVoew
nUaGgdTh4Lur546DxIIWr5c+Jo8TlSj3Jglg4idKkYoCW4qM9Wrp+JAiyXwmmJI4
yRdrUTVPRlIImdLjJizfTnb5/IQ4Y2O+gpZh8Y8VItUK/wIt0NS9472IrvLvUcmY
ltLdXRRLKkSsTggHsRHofQKBgQCkCpDgAwuiLOrq5MTK+CNXzIFioHuDWaVaXQSc
tdOLszFddTegghuObJ6oBLQjRVCsanKI1t5rZ50SrE0Ad4N4vkd6RGaAAG8R+VTv
H8wETQxjov2QrMyorTvpyQk9SEir1MgAZ12ABmgQTw3bc0ARZBkoCRnPtr8OMWh1
rpm8FQKBgQCAQlOhkGl2cw6YnzMmgeTuk+6im27f19LyJnugEPnyZHzCve2cU9i1
Vso+YWAHtyfBEqhI0XWz/JppdfwpwYVESg8VWE6aYZP6LEEwfVCEPQYf1rNvKjJZ
LvmYM0+Z90Xc0XhatVp62awl9KbdNvkpcOtgPcshaD72PzPsU0vKHw==
-----END RSA PRIVATE KEY-----
`)

func schedulerApiKeyBytes() ([]byte, error) {
	return _schedulerApiKey, nil
}

func schedulerApiKey() (*asset, error) {
	bytes, err := schedulerApiKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler-api.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1550596096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKzCCAhOgAwIBAgIRANmWQ676fjZ3drknJpHUAZcwDQYJKoZIhvcNAQELBQAw
GzEZMBcGA1UEAxMQc2NhbGFibGVTeXNsb2dDQTAeFw0xOTAyMTkxNzA4MTVaFw00
NDAyMTkxNzA4MTNaMBQxEjAQBgNVBAMTCXNjaGVkdWxlcjCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBAOaawTzGddcgCZh60/gYthLiTHylh4tXoOXpIQUR
qz+4ZzkHv4DpqZkSfDMSaPdc9dOdoZrApHLohlnVpwRL3CyuS1MZg9HxKpWMfNNp
WUYncmv+w5yTwpJ6z86aGtTLKh8YRUn0wr7qj9U13GHoPBAd9vd2k7bg4iPDOgMg
3tRhpgfjnolkdxfczLo0INsoglfTKtvHDuA4dhZr6qINmiRPNYZGLT+fumlVwbyy
KEIH3xV2P40GCv3L1ojm1+1H/FzbBnM9LY+aAGAmJKfw3/h3q7MQC8CfTeyvESJQ
f3y27ZNtzzLMS1hhVUviCh+apO7dwCZcH5L/danyRCcVLjECAwEAAaNxMG8wDgYD
VR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV
HQ4EFgQU4j36a9GyQZTg7NX+GvsfTMYhFVQwHwYDVR0jBBgwFoAUpnplJCczYabl
/yPc52qDE43/ohcwDQYJKoZIhvcNAQELBQADggIBAGhL4AdtHhoOdr1uilcTC+NQ
o1lmtIO6DbILkKb/6/t0BiDjhXmSZQU/Me49WosbC/aMkYDP/uPOvyrRJFcDEdzU
+4QFnGzjotsRn9NJu+79i31zCHprFGKpxSOl6FYMtGxx2xp/u6pxqT75KU51sSzt
k/WtrJzt4W/kIWAxCiOO1pizMtNmF4mYjU7eCQc3zQrQy50hLuP/xJ5rxDoDNjsN
ZFkdLFfwEz4IWXcD0PG5BGG9AcQYZMdU6Y9tSMSu+Ia4w6aFu/NvhlwNEZ0cPvjs
f7Gxyj91MA5CzBagczqBmyVKQRSPZDt+C4OJjKvn9otrdnrtbpVNdNHBd2+TxKAy
VcWmdBRyb6HIIziU5khYT7MjgTI12N5JTDx7nobVusuSAlVMyAhFkrQHydt6MWfV
gRUSKCyfdnm35+Awx1LwJ+FlCrJYMoJmzcKzBeZlmabyqoAbC4XnboHvU6SUc8qV
p7tB5mHDTjqOj+3jA0luaNtAwHgUDV17NruFfo6lyl//GiyDJYti8iMipKCdcAsS
Wr6MkKh2lKar2TYkUxXhDPdGl8TWFRMxcHODtk+XgOnDw9Snp6/uwk3/vJobUiPr
E04/ZLuyk80n2Xhjod+kaxBuk+UTvnDKcEgRz1YryxctZthdiqjpiuoQgaruFH7F
dsApdapbkBGOXmjJJPmS
-----END CERTIFICATE-----
`)

func schedulerCrtBytes() ([]byte, error) {
	return _schedulerCrt, nil
}

func schedulerCrt() (*asset, error) {
	bytes, err := schedulerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.crt", size: 1505, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWTCCAUECAQAwFDESMBAGA1UEAxMJc2NoZWR1bGVyMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEA5prBPMZ11yAJmHrT+Bi2EuJMfKWHi1eg5ekhBRGr
P7hnOQe/gOmpmRJ8MxJo91z1052hmsCkcuiGWdWnBEvcLK5LUxmD0fEqlYx802lZ
Ridya/7DnJPCknrPzpoa1MsqHxhFSfTCvuqP1TXcYeg8EB3293aTtuDiI8M6AyDe
1GGmB+OeiWR3F9zMujQg2yiCV9Mq28cO4Dh2Fmvqog2aJE81hkYtP5+6aVXBvLIo
QgffFXY/jQYK/cvWiObX7Uf8XNsGcz0tj5oAYCYkp/Df+HersxALwJ9N7K8RIlB/
fLbtk23PMsxLWGFVS+IKH5qk7t3AJlwfkv91qfJEJxUuMQIDAQABoAAwDQYJKoZI
hvcNAQELBQADggEBACQCjHgPjc0Qwau87qiFsNPhwkX0r4wARgHYsyBLPYX6s3h/
nW5mN1ZKgQGEyc+8SLJEYeT8wskPpL1R4LwzP45sUpYBMY8WFzZFULxu+ndoIwAc
TRajdfKwA8gYw7PVAfDZiTVI7ZNauSS1Xl4Rq5pryZNt4/XByphIf1t0ZbT82f7I
p4R6sLvIIfLVpOpWiwdAcefEPhHHRMXFbdEz0tIZvU6dZk5fG5TO/PLJTamIriD4
qBdq7wtfZP+t3hDJWX70k7bEt5Nr7OqB/8ai3nlHQX1omtGH7mcdwP8CmvcM/+nh
jHLsjrIkW6QJ+paRE+TnZAO2y/Yyhz7SxqT/Bmo=
-----END CERTIFICATE REQUEST-----
`)

func schedulerCsrBytes() ([]byte, error) {
	return _schedulerCsr, nil
}

func schedulerCsr() (*asset, error) {
	bytes, err := schedulerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.csr", size: 891, mode: os.FileMode(292), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA5prBPMZ11yAJmHrT+Bi2EuJMfKWHi1eg5ekhBRGrP7hnOQe/
gOmpmRJ8MxJo91z1052hmsCkcuiGWdWnBEvcLK5LUxmD0fEqlYx802lZRidya/7D
nJPCknrPzpoa1MsqHxhFSfTCvuqP1TXcYeg8EB3293aTtuDiI8M6AyDe1GGmB+Oe
iWR3F9zMujQg2yiCV9Mq28cO4Dh2Fmvqog2aJE81hkYtP5+6aVXBvLIoQgffFXY/
jQYK/cvWiObX7Uf8XNsGcz0tj5oAYCYkp/Df+HersxALwJ9N7K8RIlB/fLbtk23P
MsxLWGFVS+IKH5qk7t3AJlwfkv91qfJEJxUuMQIDAQABAoIBAQDWbAtGAZtM/uMt
Pvid9gxGntlUBW51aHOZlB454mYDh+mjI8sziRFD3eZSbsnfSDbkH+xGQt4mYoOa
QIld+1Os0BwGFvF1YvOfvtPKmGiETOWd+XPVwaboIP3dM3nDZ22xIBY9YDM85kn7
jGtxNkmzCsm67C0JnS1o53ynsAbCHo2XO3VVTRv7wqHiYeTteYHzL0dT/p62nOSw
G7NN0ZgdXOw/rCTDtvN/FF6fhe4aurr/rgL7Em/xIURcmF3lPJRQeEBn/YhVSiTC
Zf/rjQA1b7P2PQkS//CiuspMO+FI0j00Vf5E3L+2OUwGLRvuuG91Kcq8k7YDA8Qs
xQL5Xi+JAoGBAOajCaYYQaT8uzWLoDygr7U+6JweWQAFY6Zzdiz0LBV38+r05SOr
86ZfXyDSwbcOUpCyIqfQGItIvNX+6luXgeol2P9YcDg/IpS9s9n64ZIKiUP0+BGg
5cqGLxmVxw1N1u6sqrIifpVYQ5Yv+o47A+Mu5AFtEL+QNGHM/3GepTvLAoGBAP/2
zmgvY35pAbCRh133pip3NN73E312M9CzDE+mHR0hsb/SzbtloWk8IddZyLpDSld6
KtLTGDf7OhTJ0kwZ1yMw3RsTP1u4/lkBTTiHlURBxEFJdAHAtfX1ZzgFf96qo2AT
iimP7w1CZSu08zIkGzjEAvzUZ99BgbCOy/S167ZzAoGAdtiuwSsgsI8XPSldAcDf
qirnnIM643rjdcNrsxCDovBz/bACX5Zc8G+WyogwEE9OFofkucrOyv9JZ5B7XYU+
CdVE85e0BBfsju8OPZY9JI9PWnhiWFsr7mek369BqkZhKg5Jy49g4T5hXYQNvbsF
bs0b6uwzxDLf+0Gyo+7XQG8CgYEAigWA2YcsJD7lLVvb3Zyrmlx7QvuCI/X4DMJv
kgdlzY6ctW4rh7BOsFs/eEsuxNmCHdd/ff1cItuyPwFxB54rdwtjPrVLRd9kL4RX
KnNZ1tuLwxSjnEpZFA7HINs+T0g+HpGKv8ygP8scmMvTE6eKkjqHzeOPO0CseRMX
AZaTSucCgYBtdsKJVbIbEUZr6NnQDCCiUVU1vYX1DnPvWPnRg4z/Lxk084ybGiZS
9i5JJag43WkBw/P36ztjQasZQg4SKHo9mvCwQ2IvYQ0vmjkB7MkJp4t6ViQpYuUf
hyoRbfWo+kihgAMFWFaKBP8z/3f2rUgwLpdzT3Rb9rTGq5tf7z/eVg==
-----END RSA PRIVATE KEY-----
`)

func schedulerKeyBytes() ([]byte, error) {
	return _schedulerKey, nil
}

func schedulerKey() (*asset, error) {
	bytes, err := schedulerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1550596095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"adapter-rlp.crt":        adapterRlpCrt,
	"adapter-rlp.csr":        adapterRlpCsr,
	"adapter-rlp.key":        adapterRlpKey,
	"adapter.crt":            adapterCrt,
	"adapter.csr":            adapterCsr,
	"adapter.key":            adapterKey,
	"scalable-syslog-ca.crl": scalableSyslogCaCrl,
	"scalable-syslog-ca.crt": scalableSyslogCaCrt,
	"scalable-syslog-ca.key": scalableSyslogCaKey,
	"scheduler-api.crt":      schedulerApiCrt,
	"scheduler-api.csr":      schedulerApiCsr,
	"scheduler-api.key":      schedulerApiKey,
	"scheduler.crt":          schedulerCrt,
	"scheduler.csr":          schedulerCsr,
	"scheduler.key":          schedulerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"adapter-rlp.crt":        &bintree{adapterRlpCrt, map[string]*bintree{}},
	"adapter-rlp.csr":        &bintree{adapterRlpCsr, map[string]*bintree{}},
	"adapter-rlp.key":        &bintree{adapterRlpKey, map[string]*bintree{}},
	"adapter.crt":            &bintree{adapterCrt, map[string]*bintree{}},
	"adapter.csr":            &bintree{adapterCsr, map[string]*bintree{}},
	"adapter.key":            &bintree{adapterKey, map[string]*bintree{}},
	"scalable-syslog-ca.crl": &bintree{scalableSyslogCaCrl, map[string]*bintree{}},
	"scalable-syslog-ca.crt": &bintree{scalableSyslogCaCrt, map[string]*bintree{}},
	"scalable-syslog-ca.key": &bintree{scalableSyslogCaKey, map[string]*bintree{}},
	"scheduler-api.crt":      &bintree{schedulerApiCrt, map[string]*bintree{}},
	"scheduler-api.csr":      &bintree{schedulerApiCsr, map[string]*bintree{}},
	"scheduler-api.key":      &bintree{schedulerApiKey, map[string]*bintree{}},
	"scheduler.crt":          &bintree{schedulerCrt, map[string]*bintree{}},
	"scheduler.csr":          &bintree{schedulerCsr, map[string]*bintree{}},
	"scheduler.key":          &bintree{schedulerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
